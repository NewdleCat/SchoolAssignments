from heapq import heappop, heappushdef find_path (source_point, destination_point, mesh):    """    Searches for a path from source_point to destination_point through the mesh    Args:        source_point: starting point of the pathfinder        destination_point: the ultimate goal the pathfinder must reach        mesh: pathway constraints the path adheres to    Returns:        A path (list of points) from source_point to destination_point if exists        A list of boxes explored by the algorithm    """    print(source_point)    print(destination_point)    path = []    boxes = {}    came_from = {}    startBox = None    destBox = None    startFound = False    destFound = False    for box in mesh['boxes']:        if box[0] <= source_point[1] and source_point[1] <= box[1] and box[2] <= source_point[0] and source_point[0] <= box[3]:                            startBox = box            print("START FOUND: ", box)            startFound = True            came_from[box] = None        if box[0] <= destination_point[1] and destination_point[1] <= box[1] and box[2] <= destination_point[0] and destination_point[0] <= box[3]:            print("DESTINATION FOUND: ", box)            destBox = box                    if startFound and destFound:            break    queue = [startBox]    while queue:        current = heappop(queue)        if current == destBox:            print(current)            print(came_from[current])            while current != startBox:                # path.append(current)                current = came_from[current]            # path.append(current)            # path.reverse()            break        for next in mesh['adj'][current]:            if next not in came_from:                heappush(queue, next)                came_from[next] = current                # #TODO IF TIME: Exit the moment user clicks on dark line        # if queue is empty:        #     print('path not found')                print(path)    #             return path, boxes.keys()